from io import StringIO
from typing import Any, Literal, Unpack
from .ffi import JsProxy
from ..js import _FetchOptions

class FetchResponse:
    def __init__(self, url: str, js_response: JsProxy[Any]) -> None: ...
    async def bytes(self) -> bytes: ...
    def clone(self) -> FetchResponse: ...
    async def json(self, **kwargs: Any) -> Any: ...
    async def memoryview(self) -> memoryview: ...
    def string(self) -> str: ...
    def unpack_archive(
        self, *, extract_dir: str | None = None, format: Literal["zip", "tar", "gztar", "bztar"] | None = None
    ) -> None: ...

    body_used: bool
    ok: bool
    redirect: bool
    status: int
    status_text: str
    type: str

def open_url(url: str) -> StringIO: ...
async def pyfetch(url: str, **kwargs: Unpack[_FetchOptions]) -> FetchResponse: ...
